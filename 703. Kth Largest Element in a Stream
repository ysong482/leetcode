class KthLargest:

    def __init__(self, k: int, nums: List[int]):
        self.heap = nums
        self.k = k
        heapq.heapify(self.heap)
        while len(self.heap) > k:
            heapq.heappop(self.heap)

    def add(self, val: int) -> int:
        #self.heap.append(val)
        if(len(self.heap)<self.k):
            heapq.heappush(self.heap,val)
        elif(self.heap[0]<val):
            heapq.heapreplace(self.heap,val)
        return self.heap[0]
